#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/loghaproxy.log
    #
global

	log 	/dev/log local
    chroot  /var/lib/haproxy
	pidfile /var/run/haproxy.pid
    maxconn 10000
	user haproxy
	group haproxy
    stats socket /var/run/haproxy.sock mode 600 level admin
	stats timeout 2m
	
	#Expanding functionality of HAProxy by lua scripts
        lua-load /etc/haproxy/parseElementTwilio.lua
        lua-load /etc/haproxy/parseElementBotConnector.lua
        lua-load /etc/haproxy/parseElementUnifonic.lua

defaults
        log global
        mode http
        balance leastconn
        maxconn 3000
        option httplog
        option dontlognull
        option http-server-close
        option forwardfor except 127.0.0.0/8
        option redispatch
        retries 3
        option http-buffer-request
        timeout connect 10s
        timeout client 30s
        timeout server 1m
        timeout http-request 10s
        timeout http-keep-alive 10s
        timeout queue 1m
        timeout check 10s
frontend my_front
        log global
        mode http
	    #locating certificate Path
        bind *:443 ssl crt /etc/haproxy/certs/hacert.pem
		#redirect Http requests to Https 
        http-request redirect scheme https unless { ssl_fc }
        option tcplog
		use_backend whatsapp if { path_beg /whatsapp }
		use_backend unifonic if { path_beg /unifonic }
        use_backend Web1 if { req.hdr(host) -i Web1.com }
        use_backend Web2 if { req.hdr(host) -i Web2.com } 
        use_backend web3 if { req.hdr(host) -i web3.com } 
backend whatsapp
       log global
       mode http
       balance leastconn
       option httpchk
       http-check send meth GET uri /api ver "HTTP/1.1 hdr(host) -i xyz.com"
       option httpchk send meth GET uri /api ver "HTTP/1.1\r\nHost: xyz.com"
       default-server inter 2s fall 2 rise 1
       stick-table type string len 36 size 1m expire 10m
       cookie serverid insert indirect nocache
       server whatsapp 127.0.0.1:1000 check cookie whatsapp
       server whatsapp2 127.0.0.1:2000 check cookie whatsapp2

backend unifonic
		 log global
         mode http
         balance leastconn
         option httpchk
         http-check send meth GET uri /api ver HTTP/1.1 path_beg /unifonic 
         http-check expect string sucess
         stick-table type string len 36 size 1m expire 10m
		 Stick on lua 
         stick on "parseElementTwilio.lua"
         cookie serverid insert indirect nocache
         server unifonic 127.0.0.1:3000 check 
         server unifonic2 127.0.0.1:4000 check

backend web3
        log global
        balance leastconn
        default-server inter 2s fall 2 rise 1
        stick-table type string len 36 size 1m expire 10m
		#HAproxy insert a cookie serverid to stick on 
        cookie serverid insert indirect nocache
        server khwarizmi 192.168.1.55:443 check cookie web3
backend web1
       log global
       mode http
       balance leastconn
       option tcp-check
       default-server inter 2s fall 2 rise 1
       stick-table type string len 36 size 1m expire 10m
       cookie serverid insert indirect nocache
       server testbot 192.168.1.55:443 check cookie testbot
backend web2
        log global
        mode http
        balance leastconn
        option httpchk	  
		option httpchk GET /api/system/status HTTP/1.0\r\nHost:web2.com
        http-check expect string success
        stick on "parseElementUnifonic.lua"
        stick-table type string len 36 size 1m expire 10m
		stick on cookie(userId)  table web2
        stick on "lua.parseElementUnifonic" 
        redirect scheme https if !{ ssl_fc }
        server web2 192.168.1.53:443 check ssl verify none
        server web2 192.168.1.70:443 check ssl verify none